/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as exampleRedirectImport } from './routes/(example)/redirect'
import { Route as exampleDeferredImport } from './routes/(example)/deferred'
import { Route as exampleUsersRouteImport } from './routes/(example)/users.route'
import { Route as examplePostsRouteImport } from './routes/(example)/posts.route'
import { Route as exampleUsersIndexImport } from './routes/(example)/users.index'
import { Route as examplePostsIndexImport } from './routes/(example)/posts.index'
import { Route as AuthedMonitorsNezhaImport } from './routes/_authed/monitors/nezha'
import { Route as exampleUsersUserIdImport } from './routes/(example)/users.$userId'
import { Route as examplePostsPostIdImport } from './routes/(example)/posts.$postId'
import { Route as examplePathlessLayoutNestedLayoutImport } from './routes/(example)/_pathlessLayout/_nested-layout'
import { Route as authSignUpSplatImport } from './routes/(auth)/sign-up.$'
import { Route as authSignInSplatImport } from './routes/(auth)/sign-in.$'
import { Route as examplePostsPostIdDeepImport } from './routes/(example)/posts_.$postId.deep'
import { Route as examplePathlessLayoutNestedLayoutRouteBImport } from './routes/(example)/_pathlessLayout/_nested-layout/route-b'
import { Route as examplePathlessLayoutNestedLayoutRouteAImport } from './routes/(example)/_pathlessLayout/_nested-layout/route-a'

// Create Virtual Routes

const examplePathlessLayoutImport = createFileRoute(
  '/(example)/_pathlessLayout',
)()

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const examplePathlessLayoutRoute = examplePathlessLayoutImport.update({
  id: '/(example)/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const exampleRedirectRoute = exampleRedirectImport.update({
  id: '/(example)/redirect',
  path: '/redirect',
  getParentRoute: () => rootRoute,
} as any)

const exampleDeferredRoute = exampleDeferredImport.update({
  id: '/(example)/deferred',
  path: '/deferred',
  getParentRoute: () => rootRoute,
} as any)

const exampleUsersRouteRoute = exampleUsersRouteImport.update({
  id: '/(example)/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const examplePostsRouteRoute = examplePostsRouteImport.update({
  id: '/(example)/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const exampleUsersIndexRoute = exampleUsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => exampleUsersRouteRoute,
} as any)

const examplePostsIndexRoute = examplePostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => examplePostsRouteRoute,
} as any)

const AuthedMonitorsNezhaRoute = AuthedMonitorsNezhaImport.update({
  id: '/monitors/nezha',
  path: '/monitors/nezha',
  getParentRoute: () => AuthedRoute,
} as any)

const exampleUsersUserIdRoute = exampleUsersUserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => exampleUsersRouteRoute,
} as any)

const examplePostsPostIdRoute = examplePostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => examplePostsRouteRoute,
} as any)

const examplePathlessLayoutNestedLayoutRoute =
  examplePathlessLayoutNestedLayoutImport.update({
    id: '/_nested-layout',
    getParentRoute: () => examplePathlessLayoutRoute,
  } as any)

const authSignUpSplatRoute = authSignUpSplatImport.update({
  id: '/(auth)/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => rootRoute,
} as any)

const authSignInSplatRoute = authSignInSplatImport.update({
  id: '/(auth)/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRoute,
} as any)

const examplePostsPostIdDeepRoute = examplePostsPostIdDeepImport.update({
  id: '/(example)/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRoute,
} as any)

const examplePathlessLayoutNestedLayoutRouteBRoute =
  examplePathlessLayoutNestedLayoutRouteBImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => examplePathlessLayoutNestedLayoutRoute,
  } as any)

const examplePathlessLayoutNestedLayoutRouteARoute =
  examplePathlessLayoutNestedLayoutRouteAImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => examplePathlessLayoutNestedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/(example)/posts': {
      id: '/(example)/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof examplePostsRouteImport
      parentRoute: typeof rootRoute
    }
    '/(example)/users': {
      id: '/(example)/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof exampleUsersRouteImport
      parentRoute: typeof rootRoute
    }
    '/(example)/deferred': {
      id: '/(example)/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof exampleDeferredImport
      parentRoute: typeof rootRoute
    }
    '/(example)/redirect': {
      id: '/(example)/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof exampleRedirectImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in/$': {
      id: '/(auth)/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof authSignInSplatImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up/$': {
      id: '/(auth)/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof authSignUpSplatImport
      parentRoute: typeof rootRoute
    }
    '/(example)/_pathlessLayout': {
      id: '/(example)/_pathlessLayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof examplePathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(example)/_pathlessLayout/_nested-layout': {
      id: '/(example)/_pathlessLayout/_nested-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof examplePathlessLayoutNestedLayoutImport
      parentRoute: typeof examplePathlessLayoutRoute
    }
    '/(example)/posts/$postId': {
      id: '/(example)/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof examplePostsPostIdImport
      parentRoute: typeof examplePostsRouteImport
    }
    '/(example)/users/$userId': {
      id: '/(example)/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof exampleUsersUserIdImport
      parentRoute: typeof exampleUsersRouteImport
    }
    '/_authed/monitors/nezha': {
      id: '/_authed/monitors/nezha'
      path: '/monitors/nezha'
      fullPath: '/monitors/nezha'
      preLoaderRoute: typeof AuthedMonitorsNezhaImport
      parentRoute: typeof AuthedImport
    }
    '/(example)/posts/': {
      id: '/(example)/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof examplePostsIndexImport
      parentRoute: typeof examplePostsRouteImport
    }
    '/(example)/users/': {
      id: '/(example)/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof exampleUsersIndexImport
      parentRoute: typeof exampleUsersRouteImport
    }
    '/(example)/_pathlessLayout/_nested-layout/route-a': {
      id: '/(example)/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof examplePathlessLayoutNestedLayoutRouteAImport
      parentRoute: typeof examplePathlessLayoutNestedLayoutImport
    }
    '/(example)/_pathlessLayout/_nested-layout/route-b': {
      id: '/(example)/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof examplePathlessLayoutNestedLayoutRouteBImport
      parentRoute: typeof examplePathlessLayoutNestedLayoutImport
    }
    '/(example)/posts_/$postId/deep': {
      id: '/(example)/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof examplePostsPostIdDeepImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedMonitorsNezhaRoute: typeof AuthedMonitorsNezhaRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedMonitorsNezhaRoute: AuthedMonitorsNezhaRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface examplePostsRouteRouteChildren {
  examplePostsPostIdRoute: typeof examplePostsPostIdRoute
  examplePostsIndexRoute: typeof examplePostsIndexRoute
}

const examplePostsRouteRouteChildren: examplePostsRouteRouteChildren = {
  examplePostsPostIdRoute: examplePostsPostIdRoute,
  examplePostsIndexRoute: examplePostsIndexRoute,
}

const examplePostsRouteRouteWithChildren =
  examplePostsRouteRoute._addFileChildren(examplePostsRouteRouteChildren)

interface exampleUsersRouteRouteChildren {
  exampleUsersUserIdRoute: typeof exampleUsersUserIdRoute
  exampleUsersIndexRoute: typeof exampleUsersIndexRoute
}

const exampleUsersRouteRouteChildren: exampleUsersRouteRouteChildren = {
  exampleUsersUserIdRoute: exampleUsersUserIdRoute,
  exampleUsersIndexRoute: exampleUsersIndexRoute,
}

const exampleUsersRouteRouteWithChildren =
  exampleUsersRouteRoute._addFileChildren(exampleUsersRouteRouteChildren)

interface examplePathlessLayoutNestedLayoutRouteChildren {
  examplePathlessLayoutNestedLayoutRouteARoute: typeof examplePathlessLayoutNestedLayoutRouteARoute
  examplePathlessLayoutNestedLayoutRouteBRoute: typeof examplePathlessLayoutNestedLayoutRouteBRoute
}

const examplePathlessLayoutNestedLayoutRouteChildren: examplePathlessLayoutNestedLayoutRouteChildren =
  {
    examplePathlessLayoutNestedLayoutRouteARoute:
      examplePathlessLayoutNestedLayoutRouteARoute,
    examplePathlessLayoutNestedLayoutRouteBRoute:
      examplePathlessLayoutNestedLayoutRouteBRoute,
  }

const examplePathlessLayoutNestedLayoutRouteWithChildren =
  examplePathlessLayoutNestedLayoutRoute._addFileChildren(
    examplePathlessLayoutNestedLayoutRouteChildren,
  )

interface examplePathlessLayoutRouteChildren {
  examplePathlessLayoutNestedLayoutRoute: typeof examplePathlessLayoutNestedLayoutRouteWithChildren
}

const examplePathlessLayoutRouteChildren: examplePathlessLayoutRouteChildren = {
  examplePathlessLayoutNestedLayoutRoute:
    examplePathlessLayoutNestedLayoutRouteWithChildren,
}

const examplePathlessLayoutRouteWithChildren =
  examplePathlessLayoutRoute._addFileChildren(
    examplePathlessLayoutRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof examplePathlessLayoutNestedLayoutRouteWithChildren
  '': typeof AuthedRouteWithChildren
  '/posts': typeof examplePostsRouteRouteWithChildren
  '/users': typeof exampleUsersRouteRouteWithChildren
  '/deferred': typeof exampleDeferredRoute
  '/redirect': typeof exampleRedirectRoute
  '/sign-in/$': typeof authSignInSplatRoute
  '/sign-up/$': typeof authSignUpSplatRoute
  '/posts/$postId': typeof examplePostsPostIdRoute
  '/users/$userId': typeof exampleUsersUserIdRoute
  '/monitors/nezha': typeof AuthedMonitorsNezhaRoute
  '/posts/': typeof examplePostsIndexRoute
  '/users/': typeof exampleUsersIndexRoute
  '/route-a': typeof examplePathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof examplePathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof examplePostsPostIdDeepRoute
}

export interface FileRoutesByTo {
  '/': typeof examplePathlessLayoutNestedLayoutRouteWithChildren
  '': typeof AuthedRouteWithChildren
  '/deferred': typeof exampleDeferredRoute
  '/redirect': typeof exampleRedirectRoute
  '/sign-in/$': typeof authSignInSplatRoute
  '/sign-up/$': typeof authSignUpSplatRoute
  '/posts/$postId': typeof examplePostsPostIdRoute
  '/users/$userId': typeof exampleUsersUserIdRoute
  '/monitors/nezha': typeof AuthedMonitorsNezhaRoute
  '/posts': typeof examplePostsIndexRoute
  '/users': typeof exampleUsersIndexRoute
  '/route-a': typeof examplePathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof examplePathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof examplePostsPostIdDeepRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/(example)/posts': typeof examplePostsRouteRouteWithChildren
  '/(example)/users': typeof exampleUsersRouteRouteWithChildren
  '/(example)/deferred': typeof exampleDeferredRoute
  '/(example)/redirect': typeof exampleRedirectRoute
  '/(auth)/sign-in/$': typeof authSignInSplatRoute
  '/(auth)/sign-up/$': typeof authSignUpSplatRoute
  '/(example)/_pathlessLayout': typeof examplePathlessLayoutRouteWithChildren
  '/(example)/_pathlessLayout/_nested-layout': typeof examplePathlessLayoutNestedLayoutRouteWithChildren
  '/(example)/posts/$postId': typeof examplePostsPostIdRoute
  '/(example)/users/$userId': typeof exampleUsersUserIdRoute
  '/_authed/monitors/nezha': typeof AuthedMonitorsNezhaRoute
  '/(example)/posts/': typeof examplePostsIndexRoute
  '/(example)/users/': typeof exampleUsersIndexRoute
  '/(example)/_pathlessLayout/_nested-layout/route-a': typeof examplePathlessLayoutNestedLayoutRouteARoute
  '/(example)/_pathlessLayout/_nested-layout/route-b': typeof examplePathlessLayoutNestedLayoutRouteBRoute
  '/(example)/posts_/$postId/deep': typeof examplePostsPostIdDeepRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/posts'
    | '/users'
    | '/deferred'
    | '/redirect'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/posts/$postId'
    | '/users/$userId'
    | '/monitors/nezha'
    | '/posts/'
    | '/users/'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/deferred'
    | '/redirect'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/posts/$postId'
    | '/users/$userId'
    | '/monitors/nezha'
    | '/posts'
    | '/users'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/(example)/posts'
    | '/(example)/users'
    | '/(example)/deferred'
    | '/(example)/redirect'
    | '/(auth)/sign-in/$'
    | '/(auth)/sign-up/$'
    | '/(example)/_pathlessLayout'
    | '/(example)/_pathlessLayout/_nested-layout'
    | '/(example)/posts/$postId'
    | '/(example)/users/$userId'
    | '/_authed/monitors/nezha'
    | '/(example)/posts/'
    | '/(example)/users/'
    | '/(example)/_pathlessLayout/_nested-layout/route-a'
    | '/(example)/_pathlessLayout/_nested-layout/route-b'
    | '/(example)/posts_/$postId/deep'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  examplePostsRouteRoute: typeof examplePostsRouteRouteWithChildren
  exampleUsersRouteRoute: typeof exampleUsersRouteRouteWithChildren
  exampleDeferredRoute: typeof exampleDeferredRoute
  exampleRedirectRoute: typeof exampleRedirectRoute
  authSignInSplatRoute: typeof authSignInSplatRoute
  authSignUpSplatRoute: typeof authSignUpSplatRoute
  examplePathlessLayoutRoute: typeof examplePathlessLayoutRouteWithChildren
  examplePostsPostIdDeepRoute: typeof examplePostsPostIdDeepRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  examplePostsRouteRoute: examplePostsRouteRouteWithChildren,
  exampleUsersRouteRoute: exampleUsersRouteRouteWithChildren,
  exampleDeferredRoute: exampleDeferredRoute,
  exampleRedirectRoute: exampleRedirectRoute,
  authSignInSplatRoute: authSignInSplatRoute,
  authSignUpSplatRoute: authSignUpSplatRoute,
  examplePathlessLayoutRoute: examplePathlessLayoutRouteWithChildren,
  examplePostsPostIdDeepRoute: examplePostsPostIdDeepRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/(example)/posts",
        "/(example)/users",
        "/(example)/deferred",
        "/(example)/redirect",
        "/(auth)/sign-in/$",
        "/(auth)/sign-up/$",
        "/(example)/_pathlessLayout",
        "/(example)/posts_/$postId/deep"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/monitors/nezha"
      ]
    },
    "/(example)/posts": {
      "filePath": "(example)/posts.route.tsx",
      "children": [
        "/(example)/posts/$postId",
        "/(example)/posts/"
      ]
    },
    "/(example)/users": {
      "filePath": "(example)/users.route.tsx",
      "children": [
        "/(example)/users/$userId",
        "/(example)/users/"
      ]
    },
    "/(example)/deferred": {
      "filePath": "(example)/deferred.tsx"
    },
    "/(example)/redirect": {
      "filePath": "(example)/redirect.tsx"
    },
    "/(auth)/sign-in/$": {
      "filePath": "(auth)/sign-in.$.tsx"
    },
    "/(auth)/sign-up/$": {
      "filePath": "(auth)/sign-up.$.tsx"
    },
    "/(example)/_pathlessLayout": {
      "filePath": "(example)/_pathlessLayout",
      "children": [
        "/(example)/_pathlessLayout/_nested-layout"
      ]
    },
    "/(example)/_pathlessLayout/_nested-layout": {
      "filePath": "(example)/_pathlessLayout/_nested-layout.tsx",
      "parent": "/(example)/_pathlessLayout",
      "children": [
        "/(example)/_pathlessLayout/_nested-layout/route-a",
        "/(example)/_pathlessLayout/_nested-layout/route-b"
      ]
    },
    "/(example)/posts/$postId": {
      "filePath": "(example)/posts.$postId.tsx",
      "parent": "/(example)/posts"
    },
    "/(example)/users/$userId": {
      "filePath": "(example)/users.$userId.tsx",
      "parent": "/(example)/users"
    },
    "/_authed/monitors/nezha": {
      "filePath": "_authed/monitors/nezha.tsx",
      "parent": "/_authed"
    },
    "/(example)/posts/": {
      "filePath": "(example)/posts.index.tsx",
      "parent": "/(example)/posts"
    },
    "/(example)/users/": {
      "filePath": "(example)/users.index.tsx",
      "parent": "/(example)/users"
    },
    "/(example)/_pathlessLayout/_nested-layout/route-a": {
      "filePath": "(example)/_pathlessLayout/_nested-layout/route-a.tsx",
      "parent": "/(example)/_pathlessLayout/_nested-layout"
    },
    "/(example)/_pathlessLayout/_nested-layout/route-b": {
      "filePath": "(example)/_pathlessLayout/_nested-layout/route-b.tsx",
      "parent": "/(example)/_pathlessLayout/_nested-layout"
    },
    "/(example)/posts_/$postId/deep": {
      "filePath": "(example)/posts_.$postId.deep.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
